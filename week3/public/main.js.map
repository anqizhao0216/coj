{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Collaborative Online Judge System';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { routing } from './app.routes';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\n\nimport { DataService } from './services/data.service';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [{\n    provide: \"data\",\n    useClass: DataService\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from \"@angular/router\";\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"problems\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"problems\",\n    component: ProblemListComponent,\n  },\n  {\n    path: \"problems/:id\",\n    component: ProblemDetailComponent,\n  },\n  {\n    path: \"**\",\n    redirectTo: \"problems\",\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n    </div>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <form class=\\\"navbar-form navbar-left\\\" >\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search Problem\\\">\\n        </div>\\n      </form>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\\n          <form class=\\\"navbar-form\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Sign In</button>\\n          </form>\\n        </li>\\n        <li class=\\\"dropdown\\\">\\n          <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{username}} <span class=\\\"caret\\\"></span></a>\\n          <ul class=\\\"dropdown-menu\\\">\\n            <li><a href=\\\"#\\\">My Profile</a></li>\\n            <li><a href=\\\"#\\\">My Favorities</a></li>\\n            <li><a href=\\\"#\\\">My Submissions</a></li>\\n            <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n            <li><a href=\\\"#\\\">Log Out</a></li>\\n          </ul>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  title = 'COJ';\n\n  username = 'Joe';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n      name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\" >\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n      name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Description\\\" [(ngModel)]=\\\"newProblem.desc\\\">\\n    </textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">difficulty</label>\\n      <select  class=\\\"form-control\\\" id=\\\"difficulty\\\"\\n      name=\\\"difficulty\\\"   [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"Easy\"\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties = [\"Easy\", \"Medium\", \"Hard\", \"Super\"];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  constructor(@Inject('data') private data) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(): void {\n    if (this.newProblem.name == \"\") {\n      console.log(\"please enter the problem name\");\n      return;\n    }\n    this.data.addProblem(this.newProblem)\n      .catch(error => console.log(error.body));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-md-4\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br />\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\n  problem: Problem;\n\n  constructor(\n    private route: ActivatedRoute,\n    @Inject('data') private data\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.problem = this.data.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n    })\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems \\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: \"./problem-list.component.html\",\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n\n  problems: Problem[] = [];\n  subscriptionProblems: Subscription;\n\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n\n  getProblems(): void {\n    this.subscriptionProblems = this.data.getProblems()\n                                          .subscribe(problems => this.problems = problems);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from \"../models/problem.model\";\nimport { PROBLEMS } from \"../mock-problems\";\nimport { Response } from '@angular/http';\n// import { Http, Response, Headers} from '@angular/http';\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class DataService {\n\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.http.get(\"api/v1/problems\")\n      .toPromise()\n      .then((res: any) => {\n        this.problemsSource.next(res);\n      })\n      .catch(this.handleError);\n\n      return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get(`api/v1/problems/${id}`)\n                    .toPromise()\n                    .then((res: any) => res)\n                    .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem): Promise<Problem> {\n    const options = {headers: new HttpHeaders({'content-type': 'application/json'})};\n    return this.http.post('/api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error(`An error occurred`, error);\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}